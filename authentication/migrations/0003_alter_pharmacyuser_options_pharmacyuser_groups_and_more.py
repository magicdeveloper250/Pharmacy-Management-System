# Generated by Django 5.1.4 on 2024-12-20 22:01

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("authentication", "0002_alter_passwordresettoken_user"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="pharmacyuser",
            options={
                "permissions": [
                    ("view_sales", "Can view pharmacy sales"),
                    ("manage_sales", "Can manage pharmacy inventory"),
                    ("view_purchases", "Can view pharmacy purchases"),
                    ("manage_purchases", "Can manage pharmacy purchases"),
                    ("view_prescriptions", "Can view prescriptions"),
                    ("manage_prescriptions", "Can manage prescriptions"),
                    ("manage_users", "Can manage pharmacy staff"),
                    ("view_customers", "Can view pharmacy customers"),
                    ("manage_customers", "Can manage pharmacy customers"),
                    ("view_reports", "Can view pharmacy reports"),
                ]
            },
        ),
        migrations.AddField(
            model_name="pharmacyuser",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="pharmacyuser",
            name="is_superuser",
            field=models.BooleanField(
                default=False,
                help_text="Designates that this user has all permissions without explicitly assigning them.",
                verbose_name="superuser status",
            ),
        ),
        migrations.AddField(
            model_name="pharmacyuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
